@using Buddies.Modules.ActionBar
@implements IDisposable
@inject IActionBarServiceHandler Handler
@inject NavigationManager NavigationManager

@code {
    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
        base.OnInitialized();
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

<header class="nav-menu">

    @*Navigation Bar*@
    <div class="nav-menu-bar">

        @*Back Button*@
        <a class="nav-action-button" href="javascript:history.back()">
            <span class="material-symbols-outlined">arrow_back</span>
        </a>

        @*Page Title*@
        <span class="nav-title">Buddies</span>

        @*Action Bar*@
        <div class="nav-action-bar">

            @*Control Buttons*@
            @{
                var actionBarService = Handler.Create();

                if (actionBarService is not null)
                {
                    foreach (var control in actionBarService.GetControls())
                    {
                        <a class="nav-action-button @string.Join(' ', control.Styles)" href="@control.Path">
                            <span class="material-symbols-outlined">@control.Icon</span>
                            <span class="title">@control.Title</span>
                        </a>
                    }
                }
            }

        </div>
    </div>
</header>
